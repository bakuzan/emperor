{"version":3,"file":"component---src-templates-listing-detail-tsx-8939b04efcf4a03d3246.js","mappings":"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","sources":["webpack://emperor/./src/utils/slugToDisplayName.ts","webpack://emperor/./src/components/ListingNavigation.tsx","webpack://emperor/./src/components/EmperorInfo/LabelValue.tsx","webpack://emperor/./src/components/EmperorInfo/index.tsx","webpack://emperor/./src/utils/slugToWikiSlug.ts","webpack://emperor/./src/utils/preprocessScrapeHtml.ts","webpack://emperor/./src/templates/ListingDetail.tsx","webpack://emperor/./src/utils/displayReignLength.ts"],"sourcesContent":["const slugToDisplayName = (slug: string) =>\r\n  slug\r\n    .replace(/\\(.*\\)/g, '')\r\n    .replace(/\\//g, '')\r\n    .replace(/_/g, ' ')\r\n    .replace(/\\(|\\)/g, '')\r\n    .trim();\r\n\r\nexport default slugToDisplayName;\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport { EMPPageContext } from '@/interfaces/EMPPageContext';\r\nimport slugToDisplayName from '@/utils/slugToDisplayName';\r\n\r\ninterface NavigationProps\r\n  extends EMPPageContext,\r\n    Pick<React.HTMLProps<HTMLDivElement>, 'children'> {}\r\n\r\nexport default function ListingNavigation(props: NavigationProps) {\r\n  const { previous: prev, next } = props;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n      }}\r\n    >\r\n      <div style={{ display: 'flex', flex: 1, justifyContent: 'center' }}>\r\n        {prev && (\r\n          <Link to={prev.fields.slug} rel=\"prev\">\r\n            ← {slugToDisplayName(prev.fields.slug)}\r\n          </Link>\r\n        )}\r\n      </div>\r\n      {props.children}\r\n      <div style={{ display: 'flex', flex: 1, justifyContent: 'center' }}>\r\n        {next && (\r\n          <Link to={next.fields.slug} rel=\"next\">\r\n            {slugToDisplayName(next.fields.slug)} →\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { rhythm } from '@/utils/typography';\r\n\r\ninterface LabelValueProps\r\n  extends Pick<React.HTMLProps<HTMLDivElement>, 'children'> {\r\n  label: string;\r\n}\r\n\r\nexport default function LabelValue({ label, children }: LabelValueProps) {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"info-label\"\r\n        style={{\r\n          fontWeight: 'bold',\r\n          padding: `0 ${rhythm(1 / 4)}`,\r\n          textAlign: 'right'\r\n        }}\r\n      >\r\n        {label}\r\n      </div>\r\n      <div className=\"info-value\" style={{ padding: `0 ${rhythm(1 / 4)}` }}>\r\n        {children}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport LabelValue from './LabelValue';\r\nimport { InDepthEmperor } from '@/interfaces/Emperor';\r\nimport { displayReignLength } from '@/utils/displayReignLength';\r\nimport { rhythm } from '@/utils/typography';\r\nimport NewTabLink from 'meiko/NewTabLink';\r\nimport slugToWikiSlug from '@/utils/slugToWikiSlug';\r\nimport { withPrefix } from 'gatsby';\r\n\r\ninterface EmperorInfoProps {\r\n  data: InDepthEmperor;\r\n}\r\n\r\nexport default function EmperorInfo({ data }: EmperorInfoProps) {\r\n  return (\r\n    <div\r\n      className=\"emperor-detail\"\r\n      style={{\r\n        display: 'grid',\r\n        gridAutoRows: `auto`,\r\n        gridGap: `2px 4px`,\r\n        gridTemplateColumns: `90px 1fr`,\r\n        padding: `0 ${rhythm(1)}`,\r\n        margin: `auto 0`\r\n      }}\r\n    >\r\n      <LabelValue label=\"Name\">{data.name}</LabelValue>\r\n      <LabelValue label=\"Dynasty\">{data.house}</LabelValue>\r\n      <LabelValue label=\"Born\">\r\n        <div>{data.dateOfBirth}</div>\r\n        <div>{data.birthplace}</div>\r\n      </LabelValue>\r\n      <LabelValue label=\"Died\">\r\n        <div>{data.dateOfDeath}</div>\r\n        <div>{data.deathplace}</div>\r\n      </LabelValue>\r\n      <LabelValue label=\"Reign\">\r\n        <div>\r\n          {data.reignStart} to {data.reignEnd}\r\n        </div>\r\n        <div>({displayReignLength(data.reignLengthInDays)})</div>\r\n      </LabelValue>\r\n      <LabelValue label=\"Links\">\r\n        <NewTabLink\r\n          href={`https://en.wikipedia.org/wiki/${slugToWikiSlug(data.slug)}`}\r\n          aria-label={`Open ${data.name} wikipedia entry in a new tab`}\r\n        >\r\n          <div\r\n            style={{ display: 'flex', alignItems: 'center' }}\r\n            aria-hidden={true}\r\n          >\r\n            <img\r\n              src={withPrefix('/wikipedia.png')}\r\n              alt={'wikipedia logo'}\r\n              width={16}\r\n              height={16}\r\n              style={{ margin: `0 4px` }}\r\n            />\r\n            wikipedia\r\n          </div>\r\n        </NewTabLink>\r\n      </LabelValue>\r\n    </div>\r\n  );\r\n}\r\n","export default function slugToWikiSlug(slug: string) {\r\n  return slug.replace(/\\//g, '');\r\n}\r\n","export default function preprocessScrapeHtml(html: string) {\r\n  return html.replace(\r\n    /<a/g,\r\n    `<a target=\"_blank\" rel=\"nofollow noopener noreferrer\"`\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\n\r\nimport Layout from '@/components/Layout';\r\nimport SEO from '@/components/SEO';\r\nimport ListingNavigation from '@/components/ListingNavigation';\r\nimport EmperorInfo from '@/components/EmperorInfo';\r\n\r\nimport { EmperorDetail } from '@/interfaces/EmperorDetail';\r\nimport { EMPPage } from '@/interfaces/EMPPage';\r\nimport { Query } from '@/interfaces/Query';\r\nimport { InDepthEmperor } from '@/interfaces/Emperor';\r\nimport { rhythm } from '@/utils/typography';\r\nimport slugToDisplayName from '@/utils/slugToDisplayName';\r\nimport preprocessScrapeHtml from '@/utils/preprocessScrapeHtml';\r\n\r\nimport './ListingDetail.scss';\r\n\r\nconst MarkdownSplitPoint = `[comment]: # 'breakpoint'`;\r\n\r\ntype MutliQuery = Query<EmperorDetail, 'markdownRemark'> &\r\n  Query<InDepthEmperor, 'emperorsJson'>;\r\n\r\ninterface ListingDetailProps extends EMPPage<MutliQuery> {}\r\n\r\nexport default function ListingDetail(props: ListingDetailProps) {\r\n  const { data, pageContext, path } = props;\r\n  const { rawMarkdownBody } = data.markdownRemark;\r\n\r\n  const name = slugToDisplayName(path);\r\n  const [topContent, coreContent] = rawMarkdownBody.split(MarkdownSplitPoint);\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={name} />\r\n      <ListingNavigation {...pageContext}>\r\n        <h2\r\n          style={{\r\n            color: `var(--text-colour)`,\r\n            margin: rhythm(1 / 4)\r\n          }}\r\n        >\r\n          {name}\r\n        </h2>\r\n      </ListingNavigation>\r\n      <div\r\n        className=\"listing-detail-top\"\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          padding: `0 ${rhythm(1)}`,\r\n          margin: `${rhythm(1)} 0`\r\n        }}\r\n      >\r\n        <div\r\n          id=\"wikiPhoto\"\r\n          dangerouslySetInnerHTML={{ __html: preprocessScrapeHtml(topContent) }}\r\n        />\r\n        <EmperorInfo data={data.emperorsJson} />\r\n      </div>\r\n      <div\r\n        id=\"wikiDetail\"\r\n        dangerouslySetInnerHTML={{ __html: preprocessScrapeHtml(coreContent) }}\r\n      />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport const query = graphql`\r\n  query ($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      fields {\r\n        slug\r\n      }\r\n      rawMarkdownBody\r\n    }\r\n    emperorsJson(slug: { eq: $slug }) {\r\n      slug\r\n      name\r\n      dateOfBirth\r\n      birthplace\r\n      dateOfDeath\r\n      deathplace\r\n      house\r\n      succession\r\n      reignStart\r\n      reignEnd\r\n      fields {\r\n        reignLengthInDays\r\n      }\r\n    }\r\n  }\r\n`;\r\n","const ONE_YEAR = 365;\r\nconst ONE_MONTH = 30.417;\r\n\r\nexport function displayReignLength(reignInDays: number, newLines = false) {\r\n  let reign = '';\r\n\r\n  const totalDays = Math.round(reignInDays);\r\n\r\n  const dy = totalDays / ONE_YEAR;\r\n  const years = Math.floor(dy);\r\n\r\n  const dm = totalDays / ONE_MONTH;\r\n  const months = Math.floor(dm - years * 12);\r\n\r\n  const days =\r\n    months >= 0\r\n      ? Math.round(totalDays - years * ONE_YEAR - months * ONE_MONTH)\r\n      : 0;\r\n\r\n  if (years > 0) {\r\n    reign += `${years} years`;\r\n\r\n    if (newLines) {\r\n      reign += '\\n';\r\n    }\r\n  }\r\n\r\n  if (months > 0) {\r\n    reign += reign && !newLines ? ', ' : '';\r\n    reign += `${months} months`;\r\n\r\n    if (newLines) {\r\n      reign += '\\n';\r\n    }\r\n  }\r\n\r\n  if (days > 0) {\r\n    reign += reign ? ' and ' : '';\r\n    reign += `${days} days`;\r\n  }\r\n\r\n  return reign;\r\n}\r\n\r\n// 7463.083\r\n"],"names":["slug","replace","trim","ListingNavigation","props","previous","prev","next","React","style","display","alignItems","flex","justifyContent","Link","to","fields","rel","slugToDisplayName","children","LabelValue","_ref","label","className","fontWeight","padding","rhythm","textAlign","EmperorInfo","data","gridAutoRows","gridGap","gridTemplateColumns","margin","name","house","dateOfBirth","birthplace","dateOfDeath","deathplace","reignStart","reignEnd","displayReignLength","reignLengthInDays","NewTabLink","href","src","withPrefix","alt","width","height","preprocessScrapeHtml","html","ListingDetail","pageContext","path","rawMarkdownBody","markdownRemark","topContent","coreContent","split","Layout","SEO","title","color","id","dangerouslySetInnerHTML","__html","emperorsJson","ONE_MONTH","reignInDays","newLines","reign","totalDays","Math","round","dy","years","floor","dm","months","days"],"sourceRoot":""}