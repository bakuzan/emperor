"use strict";(self.webpackChunkemperor=self.webpackChunkemperor||[]).push([[358],{6126:function(e,r){function n(e,r){return function(e){if(Array.isArray(e))return e}(e)||function(e,r){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var t,a,o=[],i=!0,c=!1;try{for(n=n.call(e);!(i=(t=n.next()).done)&&(o.push(t.value),!r||o.length!==r);i=!0);}catch(s){c=!0,a=s}finally{try{i||null==n.return||n.return()}finally{if(c)throw a}}return o}(e,r)||a(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function t(e){return function(e){if(Array.isArray(e))return o(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||a(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(e,r){if(e){if("string"==typeof e)return o(e,r);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?o(e,r):void 0}}function o(e,r){(null==r||r>e.length)&&(r=e.length);for(var n=0,t=new Array(r);n<r;n++)t[n]=e[n];return t}r.Z=void 0;var i=function(e){for(var r=arguments.length,n=new Array(r>1?r-1:0),t=1;t<r;t++)n[t-1]=arguments[t];return[].concat(n).map((function(r){return r.replace(/\[([^\[\]]*)\]/g,".$1.").split(".").filter((function(e){return""!==e})).reduce((function(e,r){return e&&e[r]}),e)}))},c=function(e,r){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return t(e).sort((function(e,t){return r.reduce((function(r,o,c){var s=i(e,o)[0],l=i(t,o)[0];if(0===r){var u=n(a&&"desc"===a[c]?[l,s]:[s,l],2),d=u[0],f=u[1];r=d>f?1:d<f?-1:0}return r}),0)}))};r.Z=c},1925:function(e,r,n){n.r(r);var t=n(7294),a=n(3358),o=n(2968),i=n(1470),c=n(3877),s=n(8111),l=n(6634),u=n(3549);r.default=e=>{const r=(0,l.S)(),{0:n,1:d}=(0,t.useState)(""),{0:f,1:y}=(0,t.useState)("daysSinceReignStart"),{0:m,1:p}=(0,t.useState)(!1),g=function(e,r){let n="ordered chronological";return"name"===e?n="ordered alphabetical":"reignLengthInDays"===e?n="ordered by reign length":n+="daysSinceReignStart"===e?" (on reign start date)":"daysSinceReignEnd"===e?" (on reign end date)":"",`Roman Emperors ${n} (${r?"descending":"ascending"})`}(f,m),h=n.toLocaleLowerCase(),S=e.data.allEmperorsJson.nodes,b=(0,u.Z)(S.filter((e=>e.name.toLocaleLowerCase().includes(h))),f,m);return t.createElement(o.Z,null,t.createElement(i.Z,{title:"Explore",description:"Explore the Emperors of Rome searching for them by name and sorting on a variety of fields."}),r&&t.createElement("div",null,t.createElement(a.default,{id:"search",name:"search",label:"Filter emperors by name",value:n,onChange:e=>{const r=e.target;d(r.value)}})),t.createElement(s.Z,{data:b}),t.createElement(c.Z,{title:g,data:b,grouping:()=>"Emperors",showInSingleTable:!0,isSortDesc:m,sortKey:f,onSortToggle:e=>{p((r=>f===e?!r:r)),y(e)}}))}},3549:function(e,r,n){n.d(r,{Z:function(){return o}});var t=n(6126);const a=new Map([["name",{props:["name"],orders:e=>e?["desc"]:["asc"]}],["daysSinceReignStart",{props:["daysSinceReignStart","daysSinceReignEnd"],orders:e=>e?["asc","asc"]:["desc","desc"]}],["daysSinceReignEnd",{props:["daysSinceReignEnd","daysSinceReignStart"],orders:e=>e?["asc","asc"]:["desc","desc"]}],["reignLengthInDays",{props:["reignLengthInDays","name"],orders:e=>e?["desc","asc"]:["asc","asc"]}]]);function o(e,r,n){const o=a.get(r);return(0,t.Z)(e,o.props,o.orders(n))}}}]);
//# sourceMappingURL=component---src-pages-explore-tsx-6c535ffb0266aa7c61f8.js.map