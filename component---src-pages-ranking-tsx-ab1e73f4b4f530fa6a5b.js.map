{"version":3,"file":"component---src-pages-ranking-tsx-ab1e73f4b4f530fa6a5b.js","mappings":"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","sources":["webpack://emperor/../../lib/helpers/filterFalsey.ts","webpack://emperor/../lib/orderBy.ts","webpack://emperor/./src/pages/ranking.tsx","webpack://emperor/./src/utils/orderEmperors.ts"],"sourcesContent":[null,null,"import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport filterFalsey from 'ayaka/helpers/filterFalsey';\n\nimport Layout from '@/components/Layout';\nimport SEO from '@/components/SEO';\nimport Listing from '@/components/Listing';\nimport GoTo from '@/components/GoTo';\n\nimport { Emperor, RankedEmperor } from '@/interfaces/Emperor';\nimport { EMPPage } from '@/interfaces/EMPPage';\nimport { rhythm } from '@/utils/typography';\nimport orderEmperors from '@/utils/orderEmperors';\n\ninterface Rank {\n  slug: string;\n  rank: number;\n}\n\ninterface RankingProps\n  extends EMPPage<{\n    allEmperorsJson: { nodes: Emperor[] };\n    dataJson: { top10: Rank[]; mentions: Rank[]; bottom5: Rank[] };\n  }> {}\n\nconst spacedOutPage = {\n  margin: `${rhythm(2 / 3)} 0`\n};\n\nexport default (props: RankingProps) => {\n  const { top10, mentions, bottom5 } = props.data.dataJson;\n  const allEmperors: Emperor[] = props.data.allEmperorsJson.nodes;\n\n  function mapToRanked(x: Rank) {\n    const emp = allEmperors.find((e) => e.slug === `/${x.slug}/`);\n    return emp ? ({ ...x, ...emp } as RankedEmperor) : null;\n  }\n\n  const topEmperors = top10.map(mapToRanked).filter(filterFalsey);\n  const bottomEmperors = bottom5.map(mapToRanked).filter(filterFalsey);\n  const mentionsEmperors = orderEmperors(\n    mentions.map(mapToRanked).filter(filterFalsey),\n    'daysSinceReignEnd',\n    false\n  );\n\n  const pageEmperors = [...topEmperors, ...mentionsEmperors, ...bottomEmperors];\n  const goToEmperors = pageEmperors.sort((a, b) =>\n    a.name.localeCompare(b.name)\n  );\n\n  return (\n    <Layout>\n      <SEO\n        title=\"Ranking\"\n        description=\"My personal opinion on the best and worst Roman Emperors.\"\n      />\n\n      <GoTo data={goToEmperors} />\n      <Listing\n        title=\"Top 10 Roman Emperors\"\n        descriptionContent={\n          <p style={spacedOutPage}>\n            Who was the best Emperor of Rome? How do you measure best? Without\n            getting too hung up on the reasoning, I've thrown out my personal\n            top 10 emperors of Rome below. This will be updated as I learn about\n            the Emperors.\n          </p>\n        }\n        data={topEmperors}\n        grouping={(x) => x.rank}\n        showInSingleTable\n        preserveGroupOrientation\n      />\n\n      <Listing\n        title=\"Honourable mentions\"\n        descriptionContent={\n          <p style={spacedOutPage}>\n            Appearing here in chronological order are Emperors that didn't make\n            the cut for a place in the Top 10.\n            <br /> However, they still made an impression on me and would be\n            first in line to move up.\n          </p>\n        }\n        data={mentionsEmperors}\n        grouping={() => 'Emperors'}\n        showInSingleTable\n      />\n\n      <Listing\n        title=\"The 5 Worst Roman Emperors\"\n        descriptionContent={\n          <p style={spacedOutPage}>\n            To contrast the top 10, I've included a bottom five Emperors as\n            well.\n          </p>\n        }\n        data={bottomEmperors}\n        grouping={(x) => x.rank}\n        showInSingleTable\n        preserveGroupOrientation\n      />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query EmperorsRankedQuery {\n    allEmperorsJson {\n      nodes {\n        id\n        slug\n        name\n        image {\n          childImageSharp {\n            gatsbyImageData(width: 100, height: 144, layout: FIXED)\n          }\n        }\n        house\n        succession\n        reignStart\n        reignEnd\n        reignLengthInDays\n        birthplace\n        daysSinceReignEnd\n        empire\n      }\n    }\n    dataJson {\n      top10 {\n        rank\n        slug\n      }\n      mentions {\n        rank\n        slug\n      }\n      bottom5 {\n        rank\n        slug\n      }\n    }\n  }\n`;\n","import orderBy from 'ayaka/orderBy';\n\nimport { SortKey } from '@/components/Listing';\nimport { Emperor } from '@/interfaces/Emperor';\n\ninterface EmperorOrder {\n  props: string[];\n  orders: (isDesc: boolean) => string[];\n}\n\nconst orders = new Map<SortKey, EmperorOrder>([\n  [\n    'name',\n    { props: ['name'], orders: (isDesc) => (isDesc ? ['desc'] : ['asc']) }\n  ],\n  [\n    'daysSinceReignStart',\n    {\n      props: ['daysSinceReignStart', 'daysSinceReignEnd'],\n      orders: (isDesc) => (isDesc ? ['asc', 'asc'] : ['desc', 'desc'])\n    }\n  ],\n  [\n    'daysSinceReignEnd',\n    {\n      props: ['daysSinceReignEnd', 'daysSinceReignStart'],\n      orders: (isDesc) => (isDesc ? ['asc', 'asc'] : ['desc', 'desc'])\n    }\n  ],\n  [\n    'reignLengthInDays',\n    {\n      props: ['reignLengthInDays', 'name'],\n      orders: (isDesc) => (isDesc ? ['desc', 'asc'] : ['asc', 'asc'])\n    }\n  ]\n]);\n\nexport default function orderEmperors<T extends Emperor>(\n  list: T[],\n  key: SortKey,\n  isDesc: boolean\n) {\n  const args = orders.get(key) as EmperorOrder;\n  return orderBy(list, args.props, args.orders(isDesc)) as T[];\n}\n"],"names":["value","get","from","_len","arguments","length","selectors","Array","_key","concat","map","s","replace","split","filter","t","reduce","prev","cur","arr","props","orders","undefined","_toConsumableArray","sort","a","b","acc","prop","i","aVal","bVal","_ref2","_slicedToArray","p1","p2","orderBy","spacedOutPage","margin","rhythm","top10","mentions","bottom5","data","dataJson","allEmperors","allEmperorsJson","nodes","mapToRanked","x","emp","find","e","slug","topEmperors","filterFalsey","bottomEmperors","mentionsEmperors","orderEmperors","goToEmperors","name","localeCompare","React","Layout","SEO","title","description","GoTo","Listing","descriptionContent","style","grouping","rank","showInSingleTable","preserveGroupOrientation","Map","isDesc","list","key","args"],"sourceRoot":""}